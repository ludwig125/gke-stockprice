// +build !integration

package main

import (
	"context"
	"reflect"
	"testing"

	"github.com/google/go-cmp/cmp"
	"github.com/ludwig125/gke-stockprice/database"
)

func TestSaveMovingAvg(t *testing.T) {
	// //　ログの出力先を/dev/nullにして捨てる
	// log.SetOutput(ioutil.Discard)
	// //　終わったらログ出力先を標準出力に戻す
	// defer log.SetOutput(os.Stdout)
	cleanup, err := database.SetupTestDB(3306)
	if err != nil {
		t.Fatalf("failed to SetupTestDB: %v", err)
	}
	defer cleanup()

	//_ = database.SetupTestDB(t, 3306)

	db, err := database.NewTestDB()
	if err != nil {
		t.Fatalf("failed to NewTestDB: %v", err)
	}
	inputs := [][]string{ // 右から３番めが終値
		[]string{"1011", "2019/10/18", "2886", "2913", "2857", "11", "15500", "2874.0"},
		[]string{"1011", "2019/10/17", "2907", "2907", "2878", "12", "15000", "2883.0"},
		[]string{"1011", "2019/10/16", "2902", "2932", "2892", "13", "23500", "2906.0"},
		[]string{"1011", "2019/10/15", "2845", "2905", "2845", "14", "28300", "2902.0"},
		[]string{"1011", "2019/10/11", "2879", "2879", "2820", "15", "21900", "2842.0"},
		[]string{"1011", "2019/10/10", "2876", "2876", "2844", "16", "11400", "2865.0"},
		[]string{"1011", "2019/10/09", "2850", "2865", "2827", "17", "27500", "2865.0"},
		[]string{"1011", "2019/10/08", "2813", "2896", "2813", "18", "48900", "2876.0"},
		[]string{"1012", "2019/10/18", "2886", "2913", "2857", "21", "15500", "2874.0"},
		[]string{"1012", "2019/10/17", "2907", "2907", "2878", "22", "15000", "2883.0"},
		[]string{"1012", "2019/10/16", "2902", "2932", "2892", "23", "23500", "2906.0"},
		[]string{"1012", "2019/10/15", "2845", "2905", "2845", "24", "28300", "2902.0"},
		[]string{"1012", "2019/10/11", "2879", "2879", "2820", "25", "21900", "2842.0"},
		[]string{"1012", "2019/10/10", "2876", "2876", "2844", "26", "11400", "2865.0"},
		[]string{"1012", "2019/10/09", "2850", "2865", "2827", "27", "27500", "2865.0"},
		[]string{"1012", "2019/10/08", "2813", "2896", "2813", "28", "48900", "2876.0"},
		[]string{"1013", "2019/10/18", "2886", "2913", "2857", "31", "15500", "2874.0"},
		[]string{"1013", "2019/10/17", "2907", "2907", "2878", "32", "15000", "2883.0"},
		[]string{"1013", "2019/10/16", "2902", "2932", "2892", "33", "23500", "2906.0"},
		[]string{"1013", "2019/10/15", "2845", "2905", "2845", "34", "28300", "2902.0"},
		[]string{"1013", "2019/10/11", "2879", "2879", "2820", "35", "21900", "2842.0"},
		[]string{"1013", "2019/10/10", "2876", "2876", "2844", "36", "11400", "2865.0"},
		[]string{"1013", "2019/10/09", "2850", "2865", "2827", "37", "27500", "2865.0"},
		[]string{"1013", "2019/10/08", "2813", "2896", "2813", "38", "48900", "2876.0"},
		[]string{"1014", "2019/10/18", "2886", "2913", "2857", "41", "15500", "2874.0"},
		[]string{"1014", "2019/10/17", "2907", "2907", "2878", "42", "15000", "2883.0"},
		[]string{"1014", "2019/10/16", "2902", "2932", "2892", "43", "23500", "2906.0"},
		[]string{"1014", "2019/10/15", "2845", "2905", "2845", "44", "28300", "2902.0"},
		[]string{"1014", "2019/10/11", "2879", "2879", "2820", "45", "21900", "2842.0"},
		[]string{"1014", "2019/10/10", "2876", "2876", "2844", "46", "11400", "2865.0"},
		[]string{"1014", "2019/10/09", "2850", "2865", "2827", "47", "27500", "2865.0"},
		[]string{"1014", "2019/10/08", "2813", "2896", "2813", "48", "48900", "2876.0"},
		[]string{"1015", "2019/10/18", "2886", "2913", "2857", "51", "15500", "2874.0"},
		[]string{"1015", "2019/10/17", "2907", "2907", "2878", "52", "15000", "2883.0"},
		[]string{"1015", "2019/10/16", "2902", "2932", "2892", "53", "23500", "2906.0"},
		[]string{"1015", "2019/10/15", "2845", "2905", "2845", "54", "28300", "2902.0"},
		[]string{"1015", "2019/10/11", "2879", "2879", "2820", "55", "21900", "2842.0"},
		[]string{"1015", "2019/10/10", "2876", "2876", "2844", "56", "11400", "2865.0"},
		[]string{"1015", "2019/10/09", "2850", "2865", "2827", "57", "27500", "2865.0"},
		[]string{"1015", "2019/10/08", "2813", "2896", "2813", "58", "48900", "2876.0"},
	}
	if err := db.InsertDB("daily", inputs); err != nil {
		t.Fatalf("failed to insert Database: %v", err)
	}

	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	codes := []string{"1011", "1012", "1013", "1014", "1015"}
	m := CalculateMovingAvg{
		db:              db,
		calcConcurrency: 3,
	}
	if err := m.saveMovingAvgs(ctx, codes); err != nil {
		t.Error(err)
	}
	want := [][]string{
		[]string{"1011", "2019/10/18", "12", "13", "14", "14.5", "14.5", "14.5", "14.5"},
		[]string{"1011", "2019/10/17", "13", "14", "15", "15", "15", "15", "15"},
		[]string{"1011", "2019/10/16", "14", "15", "15.5", "15.5", "15.5", "15.5", "15.5"},
		[]string{"1011", "2019/10/15", "15", "16", "16", "16", "16", "16", "16"},
		[]string{"1011", "2019/10/11", "16", "16.5", "16.5", "16.5", "16.5", "16.5", "16.5"},
		[]string{"1011", "2019/10/10", "17", "17", "17", "17", "17", "17", "17"},
		[]string{"1011", "2019/10/09", "17.5", "17.5", "17.5", "17.5", "17.5", "17.5", "17.5"},
		[]string{"1011", "2019/10/08", "18", "18", "18", "18", "18", "18", "18"},
		[]string{"1012", "2019/10/18", "22", "23", "24", "24.5", "24.5", "24.5", "24.5"},
		[]string{"1012", "2019/10/17", "23", "24", "25", "25", "25", "25", "25"},
		[]string{"1012", "2019/10/16", "24", "25", "25.5", "25.5", "25.5", "25.5", "25.5"},
		[]string{"1012", "2019/10/15", "25", "26", "26", "26", "26", "26", "26"},
		[]string{"1012", "2019/10/11", "26", "26.5", "26.5", "26.5", "26.5", "26.5", "26.5"},
		[]string{"1012", "2019/10/10", "27", "27", "27", "27", "27", "27", "27"},
		[]string{"1012", "2019/10/09", "27.5", "27.5", "27.5", "27.5", "27.5", "27.5", "27.5"},
		[]string{"1012", "2019/10/08", "28", "28", "28", "28", "28", "28", "28"},
		[]string{"1013", "2019/10/18", "32", "33", "34", "34.5", "34.5", "34.5", "34.5"},
		[]string{"1013", "2019/10/17", "33", "34", "35", "35", "35", "35", "35"},
		[]string{"1013", "2019/10/16", "34", "35", "35.5", "35.5", "35.5", "35.5", "35.5"},
		[]string{"1013", "2019/10/15", "35", "36", "36", "36", "36", "36", "36"},
		[]string{"1013", "2019/10/11", "36", "36.5", "36.5", "36.5", "36.5", "36.5", "36.5"},
		[]string{"1013", "2019/10/10", "37", "37", "37", "37", "37", "37", "37"},
		[]string{"1013", "2019/10/09", "37.5", "37.5", "37.5", "37.5", "37.5", "37.5", "37.5"},
		[]string{"1013", "2019/10/08", "38", "38", "38", "38", "38", "38", "38"},
		[]string{"1014", "2019/10/18", "42", "43", "44", "44.5", "44.5", "44.5", "44.5"},
		[]string{"1014", "2019/10/17", "43", "44", "45", "45", "45", "45", "45"},
		[]string{"1014", "2019/10/16", "44", "45", "45.5", "45.5", "45.5", "45.5", "45.5"},
		[]string{"1014", "2019/10/15", "45", "46", "46", "46", "46", "46", "46"},
		[]string{"1014", "2019/10/11", "46", "46.5", "46.5", "46.5", "46.5", "46.5", "46.5"},
		[]string{"1014", "2019/10/10", "47", "47", "47", "47", "47", "47", "47"},
		[]string{"1014", "2019/10/09", "47.5", "47.5", "47.5", "47.5", "47.5", "47.5", "47.5"},
		[]string{"1014", "2019/10/08", "48", "48", "48", "48", "48", "48", "48"},
		[]string{"1015", "2019/10/18", "52", "53", "54", "54.5", "54.5", "54.5", "54.5"},
		[]string{"1015", "2019/10/17", "53", "54", "55", "55", "55", "55", "55"},
		[]string{"1015", "2019/10/16", "54", "55", "55.5", "55.5", "55.5", "55.5", "55.5"},
		[]string{"1015", "2019/10/15", "55", "56", "56", "56", "56", "56", "56"},
		[]string{"1015", "2019/10/11", "56", "56.5", "56.5", "56.5", "56.5", "56.5", "56.5"},
		[]string{"1015", "2019/10/10", "57", "57", "57", "57", "57", "57", "57"},
		[]string{"1015", "2019/10/09", "57.5", "57.5", "57.5", "57.5", "57.5", "57.5", "57.5"},
		[]string{"1015", "2019/10/08", "58", "58", "58", "58", "58", "58", "58"},
	}
	got, err := db.SelectDB("SELECT * FROM movingavg ORDER BY code, date DESC")
	if err != nil {
		t.Error(err)
	}
	if !reflect.DeepEqual(got, want) {
		diff := cmp.Diff(got, want)
		t.Errorf("got %#v\nwant %#v\n%v", got, want, diff)
	}
}

func TestMovingAvgs(t *testing.T) {
	cleanup, err := database.SetupTestDB(3306)
	if err != nil {
		t.Fatalf("failed to SetupTestDB: %v", err)
	}
	defer cleanup()
	//defer database.SetupTestDB(t, 3306)()
	//_ = database.SetupTestDB(t, 3306)

	db, err := database.NewTestDB()
	if err != nil {
		t.Fatalf("failed to NewTestDB: %v", err)
	}
	inputs := [][]string{
		[]string{"1001", "2019/10/18", "2886", "2913", "2857", "20", "15500", "2874.0"},
		[]string{"1001", "2019/10/17", "2907", "2907", "2878", "19", "15000", "2883.0"},
		[]string{"1001", "2019/10/16", "2902", "2932", "2892", "18", "23500", "2906.0"},
		[]string{"1001", "2019/10/15", "2845", "2905", "2845", "17", "28300", "2902.0"},
		[]string{"1001", "2019/10/11", "2879", "2879", "2820", "16", "21900", "2842.0"},
		[]string{"1001", "2019/10/10", "2876", "2876", "2844", "15", "11400", "2865.0"},
		[]string{"1001", "2019/10/09", "2850", "2865", "2827", "14", "27500", "2865.0"},
		[]string{"1001", "2019/10/08", "2813", "2896", "2813", "13", "48900", "2876.0"},
		[]string{"1001", "2019/10/07", "2800", "2800", "2771", "12", "17800", "2783.0"},
		[]string{"1001", "2019/10/04", "2804", "2809", "2773", "11", "20600", "2792.0"},
		[]string{"1002", "2019/10/21", "2804", "2809", "2773", "101.5", "20600", "2792.0"},
		[]string{"1002", "2019/10/18", "2886", "2913", "2857", "102.5", "15500", "2874.0"},
		[]string{"1002", "2019/10/17", "2907", "2907", "2878", "103.5", "15000", "2883.0"},
		[]string{"1002", "2019/10/16", "2902", "2932", "2892", "104.5", "23500", "2906.0"},
		[]string{"1002", "2019/10/15", "2845", "2905", "2845", "105.5", "28300", "2902.0"},
		[]string{"1002", "2019/10/11", "2879", "2879", "2820", "106.5", "21900", "2842.0"},
		[]string{"1002", "2019/10/10", "2876", "2876", "2844", "107.5", "11400", "2865.0"},
		[]string{"1002", "2019/10/09", "2850", "2865", "2827", "108.5", "27500", "2865.0"},
		[]string{"1002", "2019/10/08", "2813", "2896", "2813", "109.5", "48900", "2876.0"},
		[]string{"1002", "2019/10/07", "2800", "2800", "2771", "110.5", "17800", "2783.0"},
		[]string{"1002", "2019/10/04", "2804", "2809", "2773", "111.5", "20600", "2792.0"},
		[]string{"1002", "2019/10/03", "2886", "2913", "2857", "112.5", "15500", "2874.0"},
		[]string{"1002", "2019/10/02", "2907", "2907", "2878", "113.5", "15000", "2883.0"},
		[]string{"1002", "2019/10/01", "2902", "2932", "2892", "114.5", "23500", "2906.0"},
		[]string{"1002", "2019/09/30", "2845", "2905", "2845", "115.5", "28300", "2902.0"},
		[]string{"1002", "2019/09/27", "2879", "2879", "2820", "116.5", "21900", "2842.0"},
		[]string{"1002", "2019/09/26", "2876", "2876", "2844", "117.5", "11400", "2865.0"},
		[]string{"1002", "2019/09/25", "2850", "2865", "2827", "118.5", "27500", "2865.0"},
		[]string{"1002", "2019/09/24", "2813", "2896", "2813", "119.5", "48900", "2876.0"},
		[]string{"1002", "2019/09/20", "2800", "2800", "2771", "120.5", "17800", "2783.0"},
	}
	if err := db.InsertDB("daily", inputs); err != nil {
		t.Error(err)
	}

	testcases := []struct {
		name               string
		code               string
		wantDateMovingAvgs []DateMovingAvgs
	}{
		{
			name: "1001_digit",
			code: "1001",
			wantDateMovingAvgs: []DateMovingAvgs{
				DateMovingAvgs{date: "2019/10/18", movingAvgs: MovingAvgs{M3: 19, M5: 18, M7: 17, M10: 15.5, M20: 15.5, M60: 15.5, M100: 15.5}},
				DateMovingAvgs{date: "2019/10/17", movingAvgs: MovingAvgs{M3: 18, M5: 17, M7: 16, M10: 15, M20: 15, M60: 15, M100: 15}},
				DateMovingAvgs{date: "2019/10/16", movingAvgs: MovingAvgs{M3: 17, M5: 16, M7: 15, M10: 14.5, M20: 14.5, M60: 14.5, M100: 14.5}},
				DateMovingAvgs{date: "2019/10/15", movingAvgs: MovingAvgs{M3: 16, M5: 15, M7: 14, M10: 14, M20: 14, M60: 14, M100: 14}},
				DateMovingAvgs{date: "2019/10/11", movingAvgs: MovingAvgs{M3: 15, M5: 14, M7: 13.5, M10: 13.5, M20: 13.5, M60: 13.5, M100: 13.5}},
				DateMovingAvgs{date: "2019/10/10", movingAvgs: MovingAvgs{M3: 14, M5: 13, M7: 13, M10: 13, M20: 13, M60: 13, M100: 13}},
				DateMovingAvgs{date: "2019/10/09", movingAvgs: MovingAvgs{M3: 13, M5: 12.5, M7: 12.5, M10: 12.5, M20: 12.5, M60: 12.5, M100: 12.5}},
				DateMovingAvgs{date: "2019/10/08", movingAvgs: MovingAvgs{M3: 12, M5: 12, M7: 12, M10: 12, M20: 12, M60: 12, M100: 12}},
				DateMovingAvgs{date: "2019/10/07", movingAvgs: MovingAvgs{M3: 11.5, M5: 11.5, M7: 11.5, M10: 11.5, M20: 11.5, M60: 11.5, M100: 11.5}},
				DateMovingAvgs{date: "2019/10/04", movingAvgs: MovingAvgs{M3: 11, M5: 11, M7: 11, M10: 11, M20: 11, M60: 11, M100: 11}},
			},
		},
		{
			name: "1002_float",
			code: "1002",
			wantDateMovingAvgs: []DateMovingAvgs{
				DateMovingAvgs{date: "2019/10/21", movingAvgs: MovingAvgs{M3: 102.5, M5: 103.5, M7: 104.5, M10: 106, M20: 111, M60: 111, M100: 111}},
				DateMovingAvgs{date: "2019/10/18", movingAvgs: MovingAvgs{M3: 103.5, M5: 104.5, M7: 105.5, M10: 107, M20: 111.5, M60: 111.5, M100: 111.5}},
				DateMovingAvgs{date: "2019/10/17", movingAvgs: MovingAvgs{M3: 104.5, M5: 105.5, M7: 106.5, M10: 108, M20: 112, M60: 112, M100: 112}},
				DateMovingAvgs{date: "2019/10/16", movingAvgs: MovingAvgs{M3: 105.5, M5: 106.5, M7: 107.5, M10: 109, M20: 112.5, M60: 112.5, M100: 112.5}},
				DateMovingAvgs{date: "2019/10/15", movingAvgs: MovingAvgs{M3: 106.5, M5: 107.5, M7: 108.5, M10: 110, M20: 113, M60: 113, M100: 113}},
				DateMovingAvgs{date: "2019/10/11", movingAvgs: MovingAvgs{M3: 107.5, M5: 108.5, M7: 109.5, M10: 111, M20: 113.5, M60: 113.5, M100: 113.5}},
				DateMovingAvgs{date: "2019/10/10", movingAvgs: MovingAvgs{M3: 108.5, M5: 109.5, M7: 110.5, M10: 112, M20: 114, M60: 114, M100: 114}},
				DateMovingAvgs{date: "2019/10/09", movingAvgs: MovingAvgs{M3: 109.5, M5: 110.5, M7: 111.5, M10: 113, M20: 114.5, M60: 114.5, M100: 114.5}},
				DateMovingAvgs{date: "2019/10/08", movingAvgs: MovingAvgs{M3: 110.5, M5: 111.5, M7: 112.5, M10: 114, M20: 115, M60: 115, M100: 115}},
				DateMovingAvgs{date: "2019/10/07", movingAvgs: MovingAvgs{M3: 111.5, M5: 112.5, M7: 113.5, M10: 115, M20: 115.5, M60: 115.5, M100: 115.5}},
				DateMovingAvgs{date: "2019/10/04", movingAvgs: MovingAvgs{M3: 112.5, M5: 113.5, M7: 114.5, M10: 116, M20: 116, M60: 116, M100: 116}},
				DateMovingAvgs{date: "2019/10/03", movingAvgs: MovingAvgs{M3: 113.5, M5: 114.5, M7: 115.5, M10: 116.5, M20: 116.5, M60: 116.5, M100: 116.5}},
				DateMovingAvgs{date: "2019/10/02", movingAvgs: MovingAvgs{M3: 114.5, M5: 115.5, M7: 116.5, M10: 117, M20: 117, M60: 117, M100: 117}},
				DateMovingAvgs{date: "2019/10/01", movingAvgs: MovingAvgs{M3: 115.5, M5: 116.5, M7: 117.5, M10: 117.5, M20: 117.5, M60: 117.5, M100: 117.5}},
				DateMovingAvgs{date: "2019/09/30", movingAvgs: MovingAvgs{M3: 116.5, M5: 117.5, M7: 118, M10: 118, M20: 118, M60: 118, M100: 118}},
				DateMovingAvgs{date: "2019/09/27", movingAvgs: MovingAvgs{M3: 117.5, M5: 118.5, M7: 118.5, M10: 118.5, M20: 118.5, M60: 118.5, M100: 118.5}},
				DateMovingAvgs{date: "2019/09/26", movingAvgs: MovingAvgs{M3: 118.5, M5: 119, M7: 119, M10: 119, M20: 119, M60: 119, M100: 119}},
				DateMovingAvgs{date: "2019/09/25", movingAvgs: MovingAvgs{M3: 119.5, M5: 119.5, M7: 119.5, M10: 119.5, M20: 119.5, M60: 119.5, M100: 119.5}},
				DateMovingAvgs{date: "2019/09/24", movingAvgs: MovingAvgs{M3: 120, M5: 120, M7: 120, M10: 120, M20: 120, M60: 120, M100: 120}},
				DateMovingAvgs{date: "2019/09/20", movingAvgs: MovingAvgs{M3: 120.5, M5: 120.5, M7: 120.5, M10: 120.5, M20: 120.5, M60: 120.5, M100: 120.5}},
			},
		},
	}
	for _, tt := range testcases {
		t.Run(tt.name, func(t *testing.T) {
			m := CalculateMovingAvg{
				db:              db,
				calcConcurrency: 3,
			}
			dateMovingAvgs, err := m.movingAvgs(tt.code)
			if err != nil {
				t.Error(err)
			}
			if !reflect.DeepEqual(dateMovingAvgs, tt.wantDateMovingAvgs) {
				//diff := cmp.Diff(dateMovingAvgs, tt.wantDateMovingAvgs)
				//t.Errorf("got %#v\nwant %#v\n%v", dateMovingAvgs, tt.wantDateMovingAvgs, diff)
				t.Errorf("got %#v\nwant %#v", dateMovingAvgs, tt.wantDateMovingAvgs)
			}
		})
	}
}
