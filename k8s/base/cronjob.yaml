apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: gke-stockprice
  labels:
    app: gke-stockprice
spec:
  # cron ref
  # https://en.wikipedia.org/wiki/Cron
  # https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/
  # https://kubernetes.io/ja/docs/concepts/workloads/controllers/cron-jobs/
  # 日本時間の平日9時から15時の30分に起動するために９時間マイナス
  #schedule: "30 0-6 * * 1-5"
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid # 前のCronが動いていたら動作しない
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gke-stockprice
        spec:
          containers:
          # [START proxy_container]
          - name: cloudsql-proxy
            image: us.gcr.io/cloudsql-docker/gce-proxy:1.16
            command: ["/cloud_sql_proxy",
                      #"-instances=gke-stockprice:us-central1:gke-stockprice-us-central1-db-f1-micro-201911170406=tcp:3306",
                      "-instances=$(DB_CONNECTION_NAME)=tcp:3306",
                      #"-instances=gke-stockprice:us-central1:gke-stockprice-us-central1-db-f1-micro-201911170406=tcp:0.0.0.0:3306",
                      "-credential_file=/credential/gke-stockprice-serviceaccount.json"]
            ports:
              - containerPort: 3306
            # [START cloudsql_security_context]
            securityContext:
              runAsUser: 2  # non-root user
              allowPrivilegeEscalation: false
            # [END cloudsql_security_context]
            env:
            - name: DB_CONNECTION_NAME
              valueFrom:
                configMapKeyRef:
                  name: sql-proxy-config
                  key: db_connection_name
            volumeMounts:
              - name: serviceaccount-volume
                mountPath: credential
                readOnly: true
          # [END proxy_container]
          - name: gke-stockprice-container
            image: us.gcr.io/gke-stockprice/gke-stockprice:latest
            imagePullPolicy: Always
            command: ["/go/bin/gke-stockprice"]
            ports:
            - containerPort: 8080
            resources:
              requests:
                memory: 512Mi
            env:
            - name: ENV_NUMBER
              valueFrom:
                configMapKeyRef:
                  name: the-map
                  key: env_number
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: debug-config
                  key: debug
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: environment
            - name: DB_CONNECTION_NAME
              valueFrom:
                configMapKeyRef:
                  name: sql-proxy-config
                  key: db_connection_name
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-config
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-config
                  key: db_password
            - name: SHEET_CREDENTIAL
              valueFrom:
                configMapKeyRef:
                  name: sheet-config
                  key: sheet-credential-path # 記載しているのは秘密鍵ファイルのパスのみ
            - name: DAILY_PRICE_URL
              valueFrom:
                configMapKeyRef:
                  name: daily-config
                  key: daily_price_url
            - name: HOLIDAY_SHEETID
              valueFrom:
                secretKeyRef:
                  name: sheetids
                  key: holiday_sheetid
            - name: COMPANYCODE_SHEETID
              valueFrom:
                secretKeyRef:
                  name: sheetids
                  key: companycode_sheetid
            - name: TREND_SHEETID
              valueFrom:
                secretKeyRef:
                  name: sheetids
                  key: trend_sheetid
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack-config
                  key: slack_token
            - name: SLACK_CHANNEL
              valueFrom:
                secretKeyRef:
                  name: slack-config
                  key: slack_channel
            - name: CIRCLE_API_USER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: circleci-api-config
                  key: circleci_token
            - name: SCRAPE_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: scrape-timeout
                  key: timeout
            - name: GROWTHTREND_TARGETDATE
              valueFrom:
                configMapKeyRef:
                  name: growthtrend-config
                  key: growthtrend_targetdate
            - name: CALC_MOVINGAVG_CONCURRENCY
              valueFrom:
                configMapKeyRef:
                  name: moving-concurrency
                  key: concurrency
            - name: CALC_GROWTHTREND_CONCURRENCY
              valueFrom:
                configMapKeyRef:
                  name: growthtrend-concurrency
                  key:  concurrency
            - name: DELETE_GKE_CLUSTER
              valueFrom:
                configMapKeyRef:
                  name: delete-gke-cluster
                  key: flag
            - name: SEND_SLACK_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: send-slack
                  key: flag
            - name: CHECK_HOLIDAY
              valueFrom:
                configMapKeyRef:
                  name: check-holiday
                  key: flag
            volumeMounts:
              - name: serviceaccount-volume
                mountPath: credential
                readOnly: true
          volumes:
          - name: serviceaccount-volume
            secret:
              secretName: kube-gke-stockprice-serviceaccount
              items:
              - key: gke-stockprice-serviceaccount.json # keyはファイル名がそのまま設定されている
                path: gke-stockprice-serviceaccount.json
          restartPolicy: Never # Cron失敗時にコンテナを再起動しない
